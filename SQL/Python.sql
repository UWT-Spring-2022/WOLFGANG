INSERT IGNORE INTO Python VALUES
("Built-in Data Types","","","",1,700),
("Varibles","","","",2,700),
("Primitive","","","",3,700),
("Integers","Whole number","<var-name> = <value>","x = 5",4,700),
("Floating point","Whole number or decimal","","x = 5, x= 5.0",5,700),
("Char","N/A","","N/A",6,700),
("Boolean","True/False","","a = True, b = False",7,700),
("String","Text, up to 63GB max length","","s = Hello, World!, s = 'Hello, World!'",8,700),
("Nil","Null is defined as NONE","","if name is None: print(None found)",9,700),
("Atom","N/A","","N/A",10,700),
("","","","",11,700),
("Structured","","","",12,700),
("Lists","Used to store multiple items","<var-name> = [<value>, <value>, <value>]","myList = [One, Two, Three]",13,700),
("Sets","A collection which is unordered, unchangeable, and unindexed","<var-name> = {<value>, <value>, <value>}","mySet = {One, Two, Three}",14,700),
("Vectors","N/A","N/A","N/A",15,700),
("Maps","A function that returns a map opject of items","<var-name> = map(<fun>, <iter>)","myNumbers = (5, 6, 7, 8) myMap = map(lambda x: x + x, myNumbers)",16,700),
("hashed map","N/A","N/A","N/A",17,700),
("sorted map","N/A","N/A","N/A",18,700),
("","","","",19,700),
("","","","",20,700),
("","","","",21,700),
("Functions","","","",22,700),
("Regular","Regular function that contains instructions","def <fun-name>():","def myFunction(): print(Hello, World!)",23,700),
("Anonymous","Can be acheived by the use of Lambda","<var-name> = lambda x: x <operator> <integer>","myLam = lambda x: x *2 print(myLam(2)) //4",24,700),
("Multiple Arguments","Must be called with correct number of arguments.","def <fun-name>(<var-name1>, <var-name2>): <fun-name>(<var-name1>, <var-name2>)","def myFunction(myVar1, myVar2): print(myVar1 +   + myVar2) -> myFunction(Hello, World)",25,700),
("Variadic","Function that takes a variable number of arguments","print(<string> + <integer> + <Float>) AND *argv","print(Hello + 123 + World) def myFun(*argv): for arg in argv: print(arg)",26,700),
("Higher Order","A function can be assigned to a variable.","def <fun-name>(<var-name>): return <var-name> <var-name> =  <fun-name>","def myFun(myNumber): return myNumber + 5  myVar = myFun  print(myVar(10)) //15",27,700),
("Loops","","","",28,700),
("If - else","if statement that contains the use of logical conditions from mathematics","if a <operator> b: elif a <operator> b: else a<operator> b","if a < b: print(hi) elif a == b: print(hello) else: print(world)",29,700),
("While","Execute instructions as long as condition is true","while a <operator> b:","i = 0 while i < 5: print(i) i+=1",30,700),
("Do While","N/A","N/A","N/A",31,700),
("For","iteration loop","for <var-name> in <list/set/fun>: OR for <var-name> in range(<integer1>, <integer2>): ","for x in myList: print(x) OR for x in range(0, 3): print(x)",32,700),
("Case","N/A","N/A","N/A",33,700),
("","","","",34,700),
("","","","",35,700),
("","","","",36,700),
("Parameter","","","",37,700),
("Single","Can be Single, Multple, or Arbitrary.","def <fun-name>(<var-name>)","",38,700),
("Multiple","","def <fun-name>(<var-name1>, <var-name2>, <var-name3>)","",39,700),
("Arbitrary","","def <fun-name>(*<var-name>)","",40,700),
("","","","",41,700),
("Return Mechanism","return <item>","","",42,700)
;
